import React, { useState, useEffect } from 'react';
import axios from 'axios';
import './App.css';

const tableStyle = {
  width: '100%',
  borderCollapse: 'collapse',
  marginBottom: '20px',
  backgroundColor: '#f2f2f2',
  border: '1px solid #ddd',
  borderRadius: '5px',
  boxShadow: '0 2px 4px rgba(0,0,0,0.1)',
  fontFamily: 'Arial, sans-serif',
  fontSize: '14px',
  color: '#333'
};

const cellStyle = {
  border: '2px solid black',
  padding: '6px'
};

const Clientes = () => {
  const [clientes, setClientes] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    axios.get('http://localhost:3002/clientes')
      .then(res => {
        setClientes(res.data);
        setLoading(false);
      });
  }, []);

  if (loading) return <div>Cargando clientes...</div>;

  return (
    <div>
      <h2>Clientes</h2>
      <table style={tableStyle}>
        <thead>
          <tr>
            <th style={cellStyle}>ID</th>
            <th style={cellStyle}>Nombre</th>
            <th style={cellStyle}>Email</th>
            <th style={cellStyle}>Cédula</th>
            <th style={cellStyle}>Teléfono</th>
            <th style={cellStyle}>Fecha de Registro</th>
          </tr>
        </thead>
        <tbody>
          {clientes.map(c => (
            <tr key={c.id}>
              <td style={cellStyle}>{c.id}</td>
              <td style={cellStyle}>{c.nombre}</td>
              <td style={cellStyle}>{c.email}</td>
              <td style={cellStyle}>{c.cedula}</td>
              <td style={cellStyle}>{c.telefono}</td>
              <td style={cellStyle}>{new Date(c.fechaDeRegistro).toLocaleString()}</td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
};

const AnalisisCredito = () => {
  const [analisis, setAnalisis] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    axios.get('http://localhost:3002/analisis_credito')
      .then(res => {
        setAnalisis(res.data);
        setLoading(false);
      });
  }, []);

  if (loading) return <div>Cargando análisis de crédito...</div>;

  return (
    <div>
      <h2>Análisis de Crédito</h2>
      <table style={tableStyle}>
        <thead>
          <tr>
            <th style={cellStyle}>ID</th>
            <th style={cellStyle}>ID Cliente</th>
            <th style={cellStyle}>Fecha Análisis</th>
            <th style={cellStyle}>Puntaje Crédito</th>
            <th style={cellStyle}>Ingresos Mensuales</th>
            <th style={cellStyle}>Deudas Actuales</th>
            <th style={cellStyle}>Estado Crédito</th>
            <th style={cellStyle}>Observaciones</th>
          </tr>
        </thead>
        <tbody>
          {analisis.map(a => (
            <tr key={a.id}>
              <td style={cellStyle}>{a.id}</td>
              <td style={cellStyle}>{a.idcliente}</td>
              <td style={cellStyle}>{new Date(a.fecha_analisis).toLocaleString()}</td>
              <td style={cellStyle}>{a.puntaje_credito}</td>
              <td style={cellStyle}>{a.ingresos_mensuales}</td>
              <td style={cellStyle}>{a.deudas_actuales}</td>
              <td style={cellStyle}>{a.estado_credito}</td>
              <td style={cellStyle}>{a.observaciones}</td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
};

const TablaJoin = () => {
  const [joined, setJoined] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    axios.get('http://localhost:3002/join')
      .then(res => {
        setJoined(res.data);
        setLoading(false);
      });
  }, []);

  if (loading) return <div>Cargando datos combinados...</div>;

  return (
    <div>
      <h2>Tabla Join: Análisis de Crédito y Clientes</h2>
      <table style={tableStyle}>
        <thead>
          <tr>
            <th style={cellStyle}>ID Cliente</th>
            <th style={cellStyle}>Nombre</th>
            <th style={cellStyle}>Email</th>
            <th style={cellStyle}>Cédula</th>
            <th style={cellStyle}>Teléfono</th>
            <th style={cellStyle}>Fecha Registro</th>
            <th style={cellStyle}>Fecha Análisis</th>
            <th style={cellStyle}>Puntaje Crédito</th>
            <th style={cellStyle}>Ingresos Mensuales</th>
            <th style={cellStyle}>Deudas Actuales</th>
            <th style={cellStyle}>Estado Crédito</th>
            <th style={cellStyle}>Observaciones</th>
          </tr>
        </thead>
        <tbody>
          {joined.map(j => (
            <tr key={j.id}>
              <td style={cellStyle}>{j.idcliente}</td>
              <td style={cellStyle}>{j.nombre}</td>
              <td style={cellStyle}>{j.email}</td>
              <td style={cellStyle}>{j.cedula}</td>
              <td style={cellStyle}>{j.telefono}</td>
              <td style={cellStyle}>{new Date(j.fechaDeRegistro).toLocaleString()}</td>
              <td style={cellStyle}>{new Date(j.fecha_analisis).toLocaleString()}</td>
              <td style={cellStyle}>{j.puntaje_credito}</td>
              <td style={cellStyle}>{j.ingresos_mensuales}</td>
              <td style={cellStyle}>{j.deudas_actuales}</td>
              <td style={cellStyle}>{j.estado_credito}</td>
              <td style={cellStyle}>{j.observaciones}</td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
};

function App() {
  return (
    <div>
      <h1>Demo Backend MySQL + React</h1>
      <Clientes />
      <AnalisisCredito />
      <TablaJoin />
    </div>
  );
}

export default App;

import express from 'express';
import mysql from 'mysql2';
import cors from 'cors';

const app = express();
app.use(cors());

const connection = mysql.createConnection({
  host: 'centerbeam.proxy.rlwy.net',
  user: 'root',
  password: 'OtHOrPfwcrjLxtURvONfDVWeOMzyQslP',
  database: 'railway',
  port: 25935
});

app.get('/clientes', (req, res) => {
  connection.query('SELECT * FROM clientes', (err, results) => {
    if (err) return res.status(500).json({ error: err });
    res.json(results);
  });
});

app.get('/analisis_credito', (req, res) => {
  connection.query('SELECT * FROM analisis_credito', (err, results) => {
    if (err) return res.status(500).json({ error: err });
    res.json(results);
  });
});

app.get('/join', (req, res) => {
  const sql = `
    SELECT a.*, c.nombre, c.email, c.cedula, c.telefono, c.fechaDeRegistro
    FROM analisis_credito a
    JOIN clientes c ON a.idcliente = c.id
  `;
  connection.query(sql, (err, results) => {
    if (err) return res.status(500).json({ error: err });
    res.json(results);
  });
});

app.listen(3002, () => {
  console.log('API escuchando en http://localhost:3002');
});

